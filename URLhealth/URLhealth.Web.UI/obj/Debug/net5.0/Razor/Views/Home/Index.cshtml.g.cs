#pragma checksum "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1f2ad388e292248c0dbe66ab7d8b10223accad80"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\_ViewImports.cshtml"
using URLhealth.Web.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\_ViewImports.cshtml"
using URLhealth.Web.UI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
using URLhealth.Entities.Concrete;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1f2ad388e292248c0dbe66ab7d8b10223accad80", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d0bad40f0d4f0a4de0d6549a1e8cd4e435f5ed2d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<URLhealth.Entities.DTO.UrlDTO>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/microsoft/signalr/dist/browser/signalr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("#"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 9 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "URL Monitoring";
    string name = "";
    int uid = 0;
    USERS sessionManager = null;
    var value = HttpContextAccessor.HttpContext.Session.GetString("SessionManager");

    short logged = 0;

    if (value != null)
    {
        sessionManager = JsonConvert.DeserializeObject<USERS>(value);
        if (sessionManager != null)
        {
            uid = sessionManager.ID;
            logged = 1;
            name = sessionManager.MAIL;
        }
    }
    ViewData["Name"] = name;


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f2ad388e292248c0dbe66ab7d8b10223accad805861", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<script>\r\n    var uid = ");
#nullable restore
#line 35 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
         Write(uid);

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n    var logged = ");
#nullable restore
#line 36 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
            Write(logged);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";

    var connection = new signalR.HubConnectionBuilder().configureLogging(signalR.LogLevel.Information).withAutomaticReconnect().withUrl(""https://localhost:44395/UrlHubs"").build();

    $(document).ready(function () {




        statusShowOK();
        start();
        function statusShowOK() {
            //console.log(connection.connectionState);
            //console.log(""bağlandınız"");
        }
        function statusShowFail() {
            //console.log(connection.connectionState);
            //console.log(""bağlanılmaya çalışılıyor"");
        }

        function start() {
            connection.start().then(() => {
                statusShowOK();

                connection.invoke(""JoinRoom"", ""Room"" + uid).catch((errRoom) => { console.log(err); })

            }).catch((err) => {
                //console.log(err);
                setTimeout(() => Start(), 2000);
            })
        }
        //Subscribes - bağlantı hareketleri
        connection.onreconnecting(er");
            WriteLiteral(@"r => {
            statusShowFail();
            //console.log(""onreconnecting: "" + err);
        })
        connection.onreconnected(connectionId => {
            statusShowOK();
            //console.log(""ConnectionId : "" + connectionId);
        })
        connection.onclose(() => {
            statusShowOK();
            start();
        })

        connection.on(""ReceiveClientCount"", (response) => {
            //console.log(""izleyen Sayısı: "" + response.clientCount);
        })


        connection.on(""PingResult"", (url, active, id) => {
            var situation = """";
            var color = """";
            if (active == true) { situation = ""On""; color = ""green""; } else { situation = ""Off""; color = ""red""; }
            $('#lblOnOff_' + id).text(situation);
            $(""#lblOnOff_"" + id).prev().css(""color"", color);
            //console.log(url + ' : ' + active);
        })


        if (logged == 0) {
            //sign in/up modal will be showed

            $('#modalS");
            WriteLiteral(@"ignIn').modal({ backdrop: 'static', keyboard: false });
            $('#modalSignIn').modal('show');
        }

    });


    function SignInUp(type) {
        var url = '';
        var mail = $('#MODALMAIL').val();

        if (mail != '') {

            $('#btnSignIn').prop('disabled', true);
            $('#btnSignUp').prop('disabled', true);

            if (type == 0) {
                url = '/Home/SignUp';
            }
            else if (type == 1) {
                url = '/Home/SignIn';
            }

            var data = new FormData();
            data.append('MAIL', mail);

            $.ajax({
                url: url,
                type: ""post"",
                data: data,
                processData: false,
                contentType: false,
                success: function (e) {

                    if (e.success == true) {

                        swal({
                            title: ""Başarılı"",
                            text: ""Giriş Başarıl");
            WriteLiteral(@"ı."",
                            icon: ""success"",
                        });
                        //sign up gerçekleştikten sonra otomatik giriş de yapılıyor.
                        setTimeout(function () {
                            window.location.reload();
                        }, 500);
                    }

                    else {
                        var message = """";
                        if (type == 0) {
                            message = ""E-Posta Adresiniz Sistemde Kayıtlı."";
                        }
                        else {
                            message = ""Kayıt Bulunamadı"";
                        }
                        swal({
                            title: ""Uyarı"",
                            text: message,
                            icon: ""warning"",
                        });
                    }



                    $('#btnSignIn').prop('disabled', false);
                    $('#btnSignUp').prop('disabled', false);

      ");
            WriteLiteral(@"          },
                error: function (e) {
                    swal({
                        title: ""Hata"",
                        text: ""İşlem Sırasında Hata Oluştu. Lütfen Tekrar Deneyiniz"",
                        icon: ""success"",
                    });

                    $('#btnSignIn').prop('disabled', false);
                    $('#btnSignUp').prop('disabled', false);
                }
            });
        }
        else {

            swal({
                title: ""Uyarı"",
                text: ""Lütfen E-Posta Adresinizi Giriniz"",
                icon: ""warning"",
            });
        }
    }


    function UrlEkleModal(i) {

        $('#MODALURLID').val(i);

        if (i == 0) {
            $('#lblUrlModalTitle').text('URL Ekle');
            $('#MODALURL').val('');
            $('#MODALREFRESH').val('0');
        }

        else {
            $('#lblUrlModalTitle').text('URL Güncelle');

            $.ajax({
                url: ""/Home/GetById");
            WriteLiteral(@"Url?id="" + i,
                type: ""Get"",
                success: function (e) {
                    $('#MODALURL').val(e.URL_LINK);
                    $('#MODALREFRESH').val(e.TIMER);
                },
                error: function (e) {
                    swal({
                        title: ""Hata"",
                        text: ""İşlem Sırasında Hata Oluştu."",
                        icon: ""error"",
                    });
                }
            });

            //getbyId çalışacak;
        }
        $('#modalUrl').modal('show');
    }

    function SaveURL() {
        var id = $('#MODALURLID').val();
        var urlName = $('#MODALURL').val();
        var refresh = $('#MODALREFRESH').val();

        var url = '';
        if (id > 0) {
            url = '/Home/UpdateUrl';
        }
        else {
            url = '/Home/AddUrl';
        }

        if (urlName != '' && refresh != '' && refresh > 0) {

            $('#btnCancel').prop('disabled', true);
     ");
            WriteLiteral(@"       $('#btnSave').prop('disabled', true);

            var data = new FormData();
            data.append('ID', id);
            data.append('URL_LINK', urlName);
            data.append('TIMER', refresh);
            $.ajax({
                url: url,
                type: ""post"",
                data: data,
                processData: false,
                contentType: false,
                success: function (e) {

                    if (e.success == true) {

                        //sign up gerçekleştikten sonra otomatik giriş de yapılıyor.
                        setTimeout(function () {
                            window.location.reload();
                        }, 500);
                    }

                    swal({
                        title: ""Başarılı"",
                        text: ""İşlem Başarıyla Tamamlandı."",
                        icon: ""success"",
                    });

                    $('#btnCancel').prop('disabled', false);
                    ");
            WriteLiteral(@"$('#btnSave').prop('disabled', false);

                },
                error: function (e) {
                    swal({
                        title: ""Hata"",
                        text: ""İşlem Sırasında Hata Oluştu. Lütfen Tekrar Deneyiniz."",
                        icon: ""error"",
                    });

                    $('#btnCancel').prop('disabled', false);
                    $('#btnSave').prop('disabled', false);
                }
            });
        }
        else{
            swal({
                title: ""Uyarı"",
                text: ""Lütfen Tüm Alanları Doldurunuz."",
                icon: ""warning"",
            });
        }

    }



    function Sil(id) {

        swal({
            title: ""Onay Bekleniyor"",
            text: ""Seçili Kaydı Silmek İstediğinize Emin Misiniz?"",
            icon: ""warning"",
            buttons: [
                'Vazgeç',
                'Onayla'
            ]
        }).then((result) => {
            if (result.is");
            WriteLiteral(@"Confirmed) {

                //swal({
                //    title: ""Başarılı."",
                //    text: ""Başarıyla Silindi"",
                //    icon: ""success"",
                //});
            } else {
                var url = ""/Home/DeleteUrl"";

                var data = new FormData();
                data.append('id', id);

                $.ajax({
                    url: url,
                    type: ""post"",
                    //data: JSON.stringify(data),
                    data: data,
                    processData: false,
                    contentType: false,
                    //contentType: ""application/json; charset=utf-8"",
                    success: function (e) {


                        if (e.success == true) {


                            swal({
                                title: ""Başarılı"",
                                text: ""Başarıyla Silindi"",
                                icon: ""success"",
                            });
       ");
            WriteLiteral(@"                     setTimeout(function () {
                                window.location.reload();
                            }, 500);
                        }
                        else {
                            swal({
                                title: ""Hata"",
                                text: ""İşlem Sırasında Hata Oluştu."",
                                icon: ""error"",
                            });
                        }
                    },
                    error: function (e) {
                        swal({
                            title: ""Hata"",
                            text: ""İşlem Sırasında Hata Oluştu."",
                            icon: ""error"",
                        });
                    }
                });
            }
        });
    }
</script>


");
#nullable restore
#line 365 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
 if (sessionManager != null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <div class=\"row\">\r\n\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f2ad388e292248c0dbe66ab7d8b10223accad8018164", async() => {
                WriteLiteral("\r\n            <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" onclick=\"UrlEkleModal(0);\">URL Ekle</button>\r\n            </div>\r\n        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n    </div>\r\n");
#nullable restore
#line 376 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row"">

    <table class=""table table-striped table-bordered"" id=""myTable"">
        <thead>
            <tr>
                <th scope=""col"">#</th>
                <th scope=""col"">URL Link</th>
                <th scope=""col"">İstek Aralığı(dk)</th>
                <th scope=""col"">On / Off</th>
                <th scope=""col"">İşlem</th>
            </tr>
        </thead>
        <tbody>
");
#nullable restore
#line 391 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
             if (Model != null)
            {
                short ctr = 1;
                foreach (var item in Model)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <tr>\r\n                        <th scope=\"row\">");
#nullable restore
#line 397 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
                                   Write(ctr);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                        <td>");
#nullable restore
#line 398 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
                       Write(item.URL_LINK);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td>");
#nullable restore
#line 399 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
                       Write(item.TIMER);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                        <td><label");
            BeginWriteAttribute("id", " id=\"", 11966, "\"", 11988, 2);
            WriteAttributeValue("", 11971, "lblOnOff_", 11971, 9, true);
#nullable restore
#line 400 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
WriteAttributeValue("", 11980, item.ID, 11980, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" style=\"color:green;\"></label></td>\r\n                        <td>\r\n                            <button class=\"btn btn-success btn-sm\"");
            BeginWriteAttribute("onclick", " onclick=\"", 12122, "\"", 12154, 3);
            WriteAttributeValue("", 12132, "UrlEkleModal(", 12132, 13, true);
#nullable restore
#line 402 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
WriteAttributeValue("", 12145, item.ID, 12145, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 12153, ")", 12153, 1, true);
            EndWriteAttribute();
            WriteLiteral(">Güncelle</button>\r\n                            <button class=\"btn btn-danger btn-sm\"");
            BeginWriteAttribute("onclick", " onclick=\"", 12240, "\"", 12263, 3);
            WriteAttributeValue("", 12250, "Sil(", 12250, 4, true);
#nullable restore
#line 403 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"
WriteAttributeValue("", 12254, item.ID, 12254, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 12262, ")", 12262, 1, true);
            EndWriteAttribute();
            WriteLiteral(">Sil</button>\r\n                        </td>\r\n                    </tr>\r\n");
#nullable restore
#line 406 "C:\Users\DIZDAS\source\GitHub\URLhealth\URLhealth\URLhealth.Web.UI\Views\Home\Index.cshtml"

                    ctr++;
                }
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </tbody>\r\n    </table>\r\n\r\n\r\n</div>\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"modalSignIn\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f2ad388e292248c0dbe66ab7d8b10223accad8023868", async() => {
                WriteLiteral(@"
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title""><label id=""lblTitle"">Giriş Yap / Üye Ol</label></h5>
                </div>
                <div class=""modal-body"">
                    <div class=""form-group"">
                        <label for=""MODALMAIL"">E-Posta</label> <br />
                        <input type=""text"" class=""form-control"" id=""MODALMAIL""");
                BeginWriteAttribute("value", " value=\"", 13124, "\"", 13132, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""MODALMAIL"" required>
                        <div class=""valid-feedback"">
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" id=""btnSignUp"" onclick=""SignInUp(0);"">Üye Ol</button>
                    <button type=""button"" class=""btn btn-primary"" id=""btnSignIn"" onclick=""SignInUp(1);"">Giriş Yap</button>
                </div>
            </div>
        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"modalUrl\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f2ad388e292248c0dbe66ab7d8b10223accad8026788", async() => {
                WriteLiteral(@"
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title""><label id=""lblUrlModalTitle"">Url Ekle / Güncelle</label></h5>

                    <input type=""text"" class=""form-control"" id=""MODALURLID""");
                BeginWriteAttribute("value", " value=\"", 14175, "\"", 14183, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""MODALURLID"" required hidden>

                </div>
                <div class=""modal-body"">
                    <div class=""form-group"">
                        <label for=""MODALURL"">URL Link</label> <br />
                        <input type=""text"" class=""form-control"" id=""MODALURL""");
                BeginWriteAttribute("value", " value=\"", 14483, "\"", 14491, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""MODALURL"" required>
                        <div class=""valid-feedback"">
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label for=""MODALREFRESH"">Refresh Süresi(dk)</label> <br />
                        <input type=""number"" class=""form-control"" id=""MODALREFRESH""");
                BeginWriteAttribute("value", " value=\"", 14848, "\"", 14856, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""MODALREFRESH"" required>
                        <div class=""valid-feedback"">
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" id=""btnCancel"" data-dismiss=""modal"">Vazgeç</button>
                    <button type=""button"" class=""btn btn-primary"" id=""btnSave"" onclick=""SaveURL();"">Kaydet</button>
                </div>
            </div>
        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<URLhealth.Entities.DTO.UrlDTO>> Html { get; private set; }
    }
}
#pragma warning restore 1591
